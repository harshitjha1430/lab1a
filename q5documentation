/*Url of downloaded project:-https://github.com/Anish-Paul-01/Simple-Calculator-in-C */
#include <stdio.h>
#include <stdlib.h>

int main()
{
    // Declaring variables
    float num_1, num_2;
    char cal, opr;

    printf("Want to use calculator?(Y/N) : \n");
    scanf("%c", &cal);

    // Taking input from the user

    if (cal == 'n' || cal == 'N')
    {
        printf("\nThank You !\n");
        exit(0);
    }

    else if (cal == 'y' || cal == 'Y')
    {
        printf("Choose an operator ( + , - , * , / ) : \n");
        scanf(" %c", &opr);

        printf("Enter the value of Number 1 : \n");
        scanf(" %f", &num_1);
        printf("Enter the value of Number 2 : \n");
        scanf(" %f", &num_2);

        // Using Switch case for the Operation

        switch (opr)
        {
        case '+':
            printf("Addition of Two Numbers :\n\n %.2f + %.2f = %.2f\n", num_1, num_2, (num_1 + num_2));
            break;
        case '-':
            printf("Substraction of Two Numbers :\n\n %.2f - %.2f = %.2f\n", num_1, num_2, (num_1 - num_2));
            break;
        case '*':
            printf("Multiplication of Two Numbers :\n\n %.2f * %.2f = %.2f\n", num_1, num_2, (num_1 * num_2));
            break;
        case '/':
            if (num_2 == 0)
            {
                printf("Cannot Divide by Zero !\n"); // We cannot divide any number by 0
                break;
            }
            else
            {
                printf("Division of Two Numbers :\n\n %.2f / %.2f = %.2f\n", num_1, num_2, (num_1 / num_2));
                break;
            }
        default:
            printf("Invalid Operator \n");
            break;
        }
    }

    else if (cal != 'n' && cal != 'N' && cal != 'y' && cal != 'Y')
    {
        printf("Invalid input!\n");
    }

    printf("\n Thank You !\n");

    return 0;
}
/* documentation
  1. Overview
This C program implements a basic calculator that performs arithmetic operations (+, -, *, /) on two floating-point numbers provided by the user. It also handles invalid inputs and gracefully exits if the user chooses not to proceed with the calculations.

2. Code Structure
The program consists of:

Variable Declarations

float num_1, num_2: Stores the two numbers to be used in calculations.
char cal: Determines whether the user wants to use the calculator (Y/N).
char opr: Stores the arithmetic operator selected by the user (+, -, *, /).
User Interaction

Prompts the user to decide whether they want to use the calculator (Y/N).
Asks the user to choose an operator and input two numbers.
Arithmetic Operations

Uses a switch statement to perform the chosen operation.
Validates inputs (e.g., division by zero) and provides appropriate feedback.
Input Validation

Handles invalid operator and input scenarios.
Ensures that division by zero is avoided.
Graceful Exit

Exits with a thank-you message if the user chooses not to proceed or after completing the calculation.
3. Functionality
Input Handling
The program asks:
"Do you want to use the calculator? (Y/N)"
If the user inputs N or n, the program exits.
If the user inputs Y or y, the program proceeds to the next step.
For any other input, the program outputs "Invalid input!" and terminates.
Operator Selection
The program prompts the user to select one of the following operators:
+ (Addition)
- (Subtraction)
* (Multiplication)
/ (Division)
Arithmetic Operations
The program uses a switch statement to perform the operation based on the chosen operator:
Addition (+): Adds num_1 and num_2.
Subtraction (-): Subtracts num_2 from num_1.
Multiplication (*): Multiplies num_1 and num_2.
Division (/): Divides num_1 by num_2 if num_2 is not zero. If num_2 is zero, it displays:
printf("Cannot Divide by Zero!");
If the user inputs an invalid operator, the program displays:
printf("Invalid Operator");
At the end of all scenarios, the program displays:
printf("\nThank You!");
5. Features
Handles arithmetic operations (+, -, *, /).
Prevents division by zero.
Provides input validation for incorrect operator selections.
Allows the user to exit the program gracefully.
*/


